version: "3.9"

networks:
  backbone:
    driver: bridge
  private:
    external: true
  vpn:
    driver: bridge

services:

  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    networks:
      - vpn
    ports:
      - 8383:8383
      - 8181:8080
    environment:
      - VPN_SERVICE_PROVIDER=surfshark
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${SURFSHARK_SERVER_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=10.14.0.2/16
      - SERVER_CITIES=Dallas,Denver,Chicago,Houston

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    cpu_count: 4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8383
    depends_on:
      - gluetun
    network_mode: service:gluetun
    volumes:
      - ${CONFIG_PATH}/qbittorrent:/config
      - ${F_DRIVE}/downloads:/downloads
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:sabnzbd-par2cmdline-turbo|ghcr.io/gilbn/theme.park:sabnzbd # reduce cpu usage
      - TP_THEME=overseerr
    network_mode: service:gluetun
    cpu_count: 4
    depends_on:
      - gluetun
    volumes:
      - ${CONFIG_PATH}/sabnzbd:/config
      - ${F_DRIVE}/downloads:/downloads #optional
      - ${F_DRIVE}/downloads/incomplete:/incomplete-downloads #optional
    restart: unless-stopped

  metube: # Youtube DL
    image: alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ${F_DRIVE}/downloads/youtube:/downloads


  # TV Episode Manager
  sonarr: # https://hub.docker.com/services/sonarr
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    cpu_count: 4
    privileged: true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=overseerr
    volumes:
      - ${CONFIG_PATH}/sonarr:/config
      - ${D_DRIVE}/tv:/tv #optional
      - ${E_DRIVE}/tv:/e/tv #optionals
      - ${F_DRIVE}/tv:/f/tv #optional
      - ${H_DRIVE}/tv:/h/tv #optional
      - ${F_DRIVE}/downloads:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped

  # Movie manager
  radarr: # https://hub.docker.com/r/linuxserver/radarr
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    cpu_count: 4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=overseerr
    volumes:
      - ${CONFIG_PATH}/radarr:/config
      - ${G_DRIVE}/movies:/movies #optional
      - ${E_DRIVE}/movies:/e/movies #
      - ${F_DRIVE}/movies:/f/movies
      - ${F_DRIVE}/downloads:/downloads #optional
     # - ${E_DRIVE}/movies:/e/movies
    ports:
      - 7878:7878
    restart: unless-stopped

  # Music manager
  lidarr: # https://hub.docker.com/r/linuxserver/lidarr
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    cpu_count: 4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:lidarr
      - TP_THEME=overseerr
    volumes:
      - ${CONFIG_PATH}/lidarr:/config
      - ${D_DRIVE}/music:/music #optional
      - ${F_DRIVE}/downloads:/downloads #optional
    ports:
      - 8686:8686
    restart: unless-stopped

  # Subtitle Downloader
  bazarr: # https://hub.docker.com/r/linuxserver/bazarr
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    cpu_count: 4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=overseerr
    volumes:
      # Volume mappings need to include all of sonarr and radarr so that it can move the subtitles there
      - ${CONFIG_PATH}/bazarr:/config
      - ${G_DRIVE}/movies:/movies #optional
      - ${E_DRIVE}/movies:/e/movies #
      - ${F_DRIVE}/movies:/f/movies
      - ${D_DRIVE}/tv:/tv #optional
      - ${E_DRIVE}/tv:/e/tv #optionals
      - ${F_DRIVE}/tv:/f/tv #optional
      - ${H_DRIVE}/tv:/h/tv #optional
      - ${F_DRIVE}/downloads:/downloads #optional
    ports:
      - 6767:6767
    restart: unless-stopped

  # Book Manager
  readarr: # https://hub.docker.com/r/linuxserver/readarr
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=overseerr
    volumes:
      - ${F_DRIVE}/config/readarr:/config
      - ${G_DRIVE}/books:/books #optional
      - ${F_DRIVE}/downloads:/downloads #optional
    ports:
      - 8787:8787
    restart: unless-stopped

  # Movie/TV Request Service
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    cpu_count: 4
    volumes:
      - ${CONFIG_PATH}/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped

  # App Organizer
  organizr:
    image: organizr/organizr
    container_name: organizr
    cpu_count: 4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/organizr:/config
    ports:
      - 80:80
    restart: unless-stopped

  # Network ad blocker
  pihole:
    container_name: pihole
    cpu_count: 4
    image: pihole/pihole:latest
    # For DHCP, it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "5335:53/tcp"
      - "5335:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8080:80/tcp"
    environment:
      TZ: 'America/Chicago'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - '${CONFIG_PATH}/pihole/main:/etc/pihole'
      - '${CONFIG_PATH}/pihole/dns:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

  # Docker Container Logging
  dozzle:
    container_name: dozzle
    cpu_count: 4
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    restart: unless-stopped

  calibre-web: # Book Reader App
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    cpu_count: 4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
#      - ${CONFIG_PATH}/calibre:/config
      - ${D_DRIVE}/books/written-library:/config
    ports:
      - 8083:8083
    restart: unless-stopped

  swag: # NGINX / Lets Encrypt Config
    image: linuxserver/swag
    container_name: swag
    cpu_count: 4
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=faiyts.media
      - SUBDOMAINS=www,movies,tv,books,subtitles,read,router,find,vpn,block,plex,torrent,usenet,watch,logs,channels,music,listen,cloud,mail,db
      - VALIDATION=dns
      - DNSPLUGIN=digitalocean #optional
      - EMAIL=me@faiyts.media #optional
    volumes:
      - ${CONFIG_PATH}/swag:/config
    ports:
      - 443:443
    #        - 80:80 #optional
    restart: unless-stopped

  # Ensures DNS Matches local public ip
  dyndns:
    container_name: dyndns
    cpu_count: 4
    image: tunix/digitalocean-dyndns
    environment:
      - DIGITALOCEAN_TOKEN=${DIGITAL_OCEAN_TOKEN}
      - DOMAIN=faiyts.media
      - NAME=www;movies;tv;books;read;router;vpn;subtitles;block;find;plex;torrent;usenet;watch;logs;channels;music;listen;cloud;mail;db
      - SLEEP_INTERVAL=300
      - REMOVE_DUPLICATES=true

  # Plex Media Server -
  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    network_mode: host
    cpu_count: 8
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=latest
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${CONFIG_PATH}/plex:/config
      - /plex/transcode:/transcode #putting transcoding on the main NVME drive.
      - ${D_DRIVE}/tv:/d/tv
      - ${G_DRIVE}/movies:/d/movies
      - ${D_DRIVE}/music:/d/music
      - ${E_DRIVE}/movies:/e/movies
      - ${F_DRIVE}/movies:/f/movies
      - ${E_DRIVE}/tv:/e/tv
      - ${H_DRIVE}/tv:/h/tv
    restart: unless-stopped


  # Audio Book Manager
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    environment:
      - AUDIOBOOKSHELF_UID=1000
      - AUDIOBOOKSHELF_GID=1000
    ports:
      - 13378:80
    volumes:
      - ${F_DRIVE}/books/audiobooks/:/audiobooks
      - ${D_DRIVE}/books/podcasts:/podcasts
      - ${D_DRIVE}/books/written:/written
      - ${CONFIG_PATH}/audiobookshelf/:/config
      - ${CONFIG_PATH}/audiobookshelf/metadata>:/metadata
    restart: unless-stopped

  # API Request Manager
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    cpu_count: 4
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
  # Personal Cloud Drive
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/nextcloud/:/config
      - ${CONFIG_PATH}/nextcloud-data:/data
    ports:
      - 1443:443
    restart: unless-stopped

  # Mailserver
  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: mailserver
    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
    hostname: mail.faiyts.media
    # More information about the mail-server ports:
    # https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/
    # To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.
    ports:
      - "25:25"    # SMTP  (explicit TLS => STARTTLS)
      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
      - "993:993"  # IMAP4 (implicit TLS)
    volumes:
      - ${CONFIG_PATH}/mailserver/mail/:/var/mail/
      - ${CONFIG_PATH}/mailserver/state/:/var/mail-state/
      - ${CONFIG_PATH}/mailserver/logs/:/var/log/mail/
      - ${CONFIG_PATH}/mailserver/config/:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
    restart: always
    stop_grace_period: 1m
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0

  # System Logging History
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: faiyts.media # set to fqdn of host
    env_file: server.env
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - ${CONFIG_PATH}/netdata:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
  # ...

  # CouchDB
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: syncthing #optional
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/syncthing:/config
      - /media/faiyt/:/media/faiyt/
      - /home/faiyt/:/home/faiyt/
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped


volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
