version: "3.9"

networks:
  backbone:
    driver: bridge
#  wg-network:
#    ipam:
#      config:
#        - subnet: 192.168.99.0/24

services:
  # Downloaders
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    network_mode: service:wireguard
    depends_on:
      - wireguard
    volumes:
      - /d/config/sabnzbd:/config
      - /d/downloads:/downloads #optional
      - /d/downloads/incomplete:/incomplete-downloads #optional
    #    ports:
    #  - 9191:8080
    #       - 8181:8080
    restart: unless-stopped
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - WEBUI_PORT=8383
    depends_on:
      - wireguard
    network_mode: service:wireguard
    volumes:
      - /d/config/qbittorrent:/config
      - /d/downloads:/downloads
    #    ports:
    #      - 8381:8383
    #      - 6879:6881
    #      - 6879:6881/udp
    restart: unless-stopped
  metube: # Youtube DL
    image: alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - /d/download/youtube:/downloads
  # VPN
  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    networks:
      - backbone
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      #      - SERVERURL=us-den.prod.surfshark.com
      # - SERVERPORT=51820
      #      - PEERDNS=auto
      #      - PIA_USER=${PIA_USER}
      # - AUTOCONNECT=true
      #      - PIA_PASS=${PIA_PASSWORD}
      - VPN_PROTOCOL=wireguard
    ports:
      - 51820:51820/udp
      - 8181:8080
      - 8383:8383
      - 6881:6881
      - 6881:6881/udp
    volumes:
      - /lib/modules:/lib/modules
      - /d/config/wireguard:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    #      - net.ipv6.conf.all.disable_ipv6=1
    #      - net.ipv6.conf.default.disable_ipv6=1
    #   command: "sleep 10 && curl -w \"\n\" ifconfig.me"
    restart: unless-stopped

# Finders
  sonarr: # https://hub.docker.com/services/sonarr
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /d/config/sonarr:/config
      - /d/tv:/tv #optional
      - /d/downloads:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped
# Getters
  radarr: # https://hub.docker.com/r/linuxserver/radarr
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /d/config/radarr:/config
      - /d/movies:/movies #optional
      - /d/downloads:/downloads #optional
    ports:
      - 7878:7878
    restart: unless-stopped
  lidarr: # https://hub.docker.com/r/linuxserver/lidarr
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /d/config/lidarr:/config
      - /d/music:/music #optional
      - /d/downloads:/downloads #optional
    ports:
      - 8686:8686
    restart: unless-stopped
  bazarr: # https://hub.docker.com/r/linuxserver/bazarr
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /d/config/bazarr:/config
      - /d/movies:/movies #optional
      - /d/tv:/tv #optional
    ports:
      - 6767:6767
    restart: unless-stopped
  readarr: # https://hub.docker.com/r/linuxserver/readarr
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /d/config/readarr:/config
      - /d/books:/books #optional
      - /d/downloads:/downloads #optional
    ports:
      - 8787:8787
    restart: unless-stopped
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /d/config/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
  organizr:
    image: organizr/organizr
    container_name: organizr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /d/config/organizr:/config
    ports:
      - 80:80
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8080:80/tcp"
    environment:
      TZ: 'America/Chicago'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - '/d/config/pihole/main:/etc/pihole'
      - '/d/config/pihole/dns:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
  # Logging
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    restart: unless-stopped
  ersatztv: #Fake TV
    container_name: ersatztv
    network_mode: host
    image: jasongdove/ersatztv:latest-nvidia
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: 1
#              capabilities: [gpu]
    environment:
      - TZ=America/Chicago
    ports:
      - 8409:8409
    #    deploy:
    #      resources:
    #        reservations:
    #          devices:
    #            - driver: nvidia
    #              count: 1
    #              capabilities: [ gpu ]
    volumes:
      - /d/config/ersatztv:/root/.local/share/ersatztv
      - /d/videos/:/media:ro
      - /d/movies:/d/movies
      - /d/tv:/d/tv
      - /d/music:/d/music
    restart: unless-stopped
  calibre-web: # Book Reader App
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /d/config/calibre:/config
      - /d/books:/books
    ports:
      - 8083:8083
    restart: unless-stopped
  swag: # NGINX / Lets Encrypt Config
    image: linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - URL=faiyts.media
      - SUBDOMAINS=www,movies,tv,books,subtitles,read,router,find,vpn,block,plex,torrent,usenet,watch,logs,channels
      - VALIDATION=dns
      - DNSPLUGIN=digitalocean #optional
      #        - DUCKDNSTOKEN=<token> #optional
      - EMAIL=me@faiyts.media #optional
    #        - DHLEVEL=2048 #optional
    #        - ONLY_SUBDOMAINS=false #optional
    #        - EXTRA_DOMAINS=<extradomains> #optional
    #        - STAGING=false #optional
    volumes:
      - /d/config/swag:/config
    ports:
      - 443:443
    #        - 80:80 #optional
    restart: unless-stopped
  # Ensures DNS Matches local public ip
  dyndns:
    container_name: dyndns
    image: tunix/digitalocean-dyndns
    environment:
      - DIGITALOCEAN_TOKEN=${DIGITAL_OCEAN_TOKEN}
      - DOMAIN=faiyts.media
      - NAME=www;movies;tv;books;read;router;vpn;subtitles;block;find;plex;torrent;usenet;watch;logs;channels
      - SLEEP_INTERVAL=300
      - REMOVE_DUPLICATES=true

  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - VERSION=latest
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - /d/config/plex:/config
      - /d/config/plex/transcode:/transcode
      - /d/tv:/d/tv
      - /d/movies:/d/movies
      - /d/music:/d/music
    restart: unless-stopped

#docker create
#–name=plex
#–hostname=plex
#–network=macvlan
#–runtime=nvidia
#–ip=192.168.1.24
#–restart=unless-stopped
#-e VERSION=latest
#-e PUID=1000
#-e PGID=1000
#-e TZ=America/Chicago
#–device=/dev/dri:/dev/dri
#-e NVIDIA_VISIBLE_DEVICES=all
#-e NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
#-e PLEX_TOKEN={your_token}
#-v /mnt/zfs/storage/apps/plex/config:/config
#-v /mnt/zfs/storage/apps/plex/data:/data
#-v /mnt/zfs/storage/apps/headphones/music:/music
#-v /mnt/zfs/storage/apps/plex/data:/transcode
#linuxserver/plex:latest

